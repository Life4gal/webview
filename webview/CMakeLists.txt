project(
		WebView
		LANGUAGES CXX
)

file(
		GLOB_RECURSE
		${PROJECT_NAME}_SOURCE
		CONFIGURE_DEPENDS

		${PROJECT_SOURCE_DIR}/src/*.cpp
)

add_library(
		${PROJECT_NAME}
		# todo
		STATIC

		${${PROJECT_NAME}_SOURCE}
)

add_library(
		gal::WebView
		ALIAS
		${PROJECT_NAME}
)

target_include_directories(
	${PROJECT_NAME}
	PUBLIC
	
	${CMAKE_CURRENT_SOURCE_DIR}/include
)

set(GAL_WEBVIEW_HEADERS)
set(GAL_WEBVIEW_LIBS)

if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
	# windows & msvc
	include(${${PROJECT_NAME_PREFIX}CMAKE_3RDPARTY_PATH}/Microsoft/WebView2.cmake)
else()
	# todo
endif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")

message(VERBOSE "======================================")
foreach(EXTRA_HEADER IN LISTS GAL_WEBVIEW_HEADERS)
	message(VERBOSE "extra header directory: ${EXTRA_HEADER}")
endforeach()
foreach(EXTRA_LIB IN LISTS GAL_WEBVIEW_LIBS)
	message(VERBOSE "extra library: ${EXTRA_LIB}")
endforeach()
message(VERBOSE "======================================")

target_include_directories(
		${PROJECT_NAME}
		PUBLIC ${GAL_WEBVIEW_HEADERS}
)

target_link_libraries(
		${PROJECT_NAME}
		PRIVATE ${GAL_WEBVIEW_LIBS}
)

target_compile_definitions(
	${PROJECT_NAME}
	PUBLIC

	${PROJECT_NAME_PREFIX}MAJOR_VERSION=${${PROJECT_NAME_PREFIX}MAJOR_VERSION}
	${PROJECT_NAME_PREFIX}MINOR_VERSION=${${PROJECT_NAME_PREFIX}MINOR_VERSION}
	${PROJECT_NAME_PREFIX}PATCH_VERSION=${${PROJECT_NAME_PREFIX}PATCH_VERSION}
	${PROJECT_NAME_PREFIX}VERSION="${${PROJECT_NAME_PREFIX}VERSION}"
	${PROJECT_NAME_PREFIX}COMPILER_NAME="${${PROJECT_NAME_PREFIX}COMPILER_NAME}"
	${PROJECT_NAME_PREFIX}COMPILER_VERSION="${${PROJECT_NAME_PREFIX}COMPILER_VERSION}"

	$<$<CXX_COMPILER_ID:MSVC>:${PROJECT_NAME_PREFIX}COMPILER_MSVC>
	$<$<CXX_COMPILER_ID:GNU>:${PROJECT_NAME_PREFIX}COMPILER_GNU>
	# clang-cl
	# Also defines MSVC
	$<$<AND:$<CXX_COMPILER_ID:Clang>,$<STREQUAL:"${CMAKE_CXX_SIMULATE_ID}","MSVC">>:${PROJECT_NAME_PREFIX}COMPILER_CLANG_CL ${PROJECT_NAME_PREFIX}COMPILER_MSVC>
	# clang
	$<$<AND:$<CXX_COMPILER_ID:Clang>,$<NOT:$<STREQUAL:"${CMAKE_CXX_SIMULATE_ID}","MSVC">>>:${PROJECT_NAME_PREFIX}COMPILER_CLANG>
	# TODO: MORE COMPILERS HERE.
)

set_compile_options_private(${PROJECT_NAME})
